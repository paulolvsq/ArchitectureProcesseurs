
;  ### -------------------------------------------------------------- ###
;  # file	: strlen_m.u						#
;  # date	: Sep  8 2009						#
;  # descr.	: functional test for Mips R3000			#
;  ### -------------------------------------------------------------- ###

	;  ### ------------------------------------------------------ ###
	;  #   data section						#
	;  ### ------------------------------------------------------ ###

			.data

source_str :		.asciiz	"Have a nice day"
head_str   :		.ascii	"longeur de la chaine : "
tail_str   :		.space	128

	;  ### ------------------------------------------------------ ###
	;  #   text section						#
	;  #     - noreorder						#
	;  ### ------------------------------------------------------ ###

			.text
			.set	noreorder

	;  ### ------------------------------------------------------ ###
	;  #   make the label _main visible for other files		#
	;  ### ------------------------------------------------------ ###

			.globl	_main

	;  ### ------------------------------------------------------ ###
	;  #   main							#
	;  ### ------------------------------------------------------ ###
	
	_strlen : 

  		ori     r2,    r0,    0

	while :

		lb      r5,    0(r4)
  		beq     r5,    r0,    end_while
  		addi    r2,    r2,    1
  		addi    r4,    r4,    1
  		j       while

	end_while :

  		jr      r31

_main :

			la	r16, source_str
			la	r17, head_str
			la	r18, tail_str

	;  ### ------------------------------------------------------ ###
	;  #   print the source string					#
	;  ### ------------------------------------------------------ ###

			add	r4 , r0 , r16
			jal	_puts

	;  ### ------------------------------------------------------ ###
	;  #   call strlen						#
	;  ### ------------------------------------------------------ ###

			add	r4 , r0 , r16
			jal	_strlen

	;  ### ------------------------------------------------------ ###
	;  #   convert the length into a string				#
	;  ### ------------------------------------------------------ ###

			add	r4 , r0 , r2
			add	r5 , r0 , r18
			jal	_uitoa_d

	;  ### ------------------------------------------------------ ###
	;  #   print the result						#
	;  ### ------------------------------------------------------ ###

			add	r4 , r0 , r17
			jal	_puts

	;  ### ------------------------------------------------------ ###
	;  #   exit							#
	;  ### ------------------------------------------------------ ###

			addi	r4 , r0 , 0		; exit value
			jal	_exit

			.end
